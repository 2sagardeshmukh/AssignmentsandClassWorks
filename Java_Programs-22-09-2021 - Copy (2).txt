//Association concept applying to Address and Person class 
//Here we are trying to Use Address Class in Person Class.

//Creating Address Class
package com.torryharris.mainpack;

public class Address {
    private int doorNo;
    private String street;
    private String city;
    private String state;
    private int pincode;

    @Override
    public String toString() {
        return "Address{" +
                "doorNo=" + doorNo +
                ", street='" + street + '\'' +
                ", city='" + city + '\'' +
                ", state='" + state + '\'' +
                ", pincode=" + pincode +
                '}';
    }

    public Address(int doorNo, String street, String city, String state, int pincode) {
        this.doorNo = doorNo;
        this.street = street;
        this.city = city;
        this.state = state;
        this.pincode = pincode;
    }
}

//creating Person Class
package com.torryharris.mainpack;

public class Person {

    private int personId;
    private String personName;
    private Address addrs;

    public Person(int personId, String personName, Address addrs) {
        this.personId = personId;
        this.personName = personName;
        this.addrs = addrs;
    }

    @Override
    public String toString() {
        return "Person{" +
                "personId=" + personId +
                ", personName='" + personName + '\'' +
                ", addrs=" + addrs +
                '}';
    }
}



package com.torryharris.mainpack;

public class Main {

    public static void main(String[] args) {

        Address addrs = new Address(17,"Brookfield street","Bangalore","Karnataka",560033);
        Person person = new Person(100,"Mythili",addrs);
        System.out.println(person);
    }
}

output:
Person{personId=100, personName='Mythili', addrs=Address{doorNo=17, street='Brookfield street', city='Bangalore', state='Karnataka', pincode=560033}}
-----------------------------------------------------------------------------------------------------------------------------------------------------
//Creating Dice Game with using Association Concept.
// this game consists of 2 players and whoever gets the more dice points he is the winner.  
//Dice Class
package com.torryharris.stadium;

import java.util.Random;

public class Dice {

    private int fValue;

    public int roll()
    {
        Random rand = new Random();
        fValue= ((int)rand.nextInt(5)+1); // start the boundary from 1 and go to till 6
                                                // nextInt(5) ---> 6
        return fValue;
    }

    public int getfValue() {
        return fValue;
    }
}

//Player Class
package com.torryharris.stadium;

public class Player {
    Dice d1;
    Dice d2;

    public Player() {
        d1 = new Dice();
        d2 = new Dice();
    }

    public int play()
    {
        return (d1.roll()+d2.roll());
    }

    public int getD1Score()
    {
        return (d1.getfValue());
    }

    public int getD2Score() {
        return (d2.getfValue());
    }

}

// Main Class
package com.torryharris.stadium;

public class Main {

    public static void main(String[] args) {

        Player p1 = new Player();
     int   p1Score = p1.play();
     int p1d1Score = p1.getD1Score();
     int   p1d2score = p1.getD2Score();

        System.out.println("P1 scored :"+p1Score);
        System.out.println("P1 d1:"+p1d1Score+"  "+"P1 d2: "+p1d2score);

     Player p2 = new Player();
     int   p2Score = p2.play();
     int   p2d1Score = p2.getD1Score();
     int   p2d2score = p2.getD2Score();
        System.out.println("P2 scored :"+p2Score);
        System.out.println("P2 d1:"+p2d1Score+"  "+"P2 d2: "+p2d2score);

        if (p1Score>p2Score)
        {
            System.out.println("P1 won the game!!!");
        }
        else
        {
            if(p1Score==p2Score)
            {
                System.out.println(" Game Draw!!!");
            }
            else
            {
                System.out.println("P2 won the game!!!");
            }
        }
    }
}

output 1:
P1 scored :9
P1 d1:5  P1 d2: 4
P2 scored :8
P2 d1:5  P2 d2: 3
P1 won the game!!!
Process finished with exit code 0

P1 scored :6
P1 d1:2  P1 d2: 4
P2 scored :8
P2 d1:3  P2 d2: 5
P2 won the game!!!

Process finished with exit code 0
--------------------------------------------------------------------------------
//Package handling
//Project is to paint(draw) the Circle in Canvas.

// we created two pacakges 1.canvas 2.circlepack
// Main class is under canvas package, and Circle class is under circlepack package.
// Circle class in circle package under com.torryharris
package com.torryharris.circlepack;

public class Circle {
    private double radius;
    private String colour;

    //non paramatized constructor
    public Circle() {
        /*this.radius = 3.5;
        this.colour = "blue";*/

        this(3.5,"Blue"); //invoking the fully paramitarized constructor.

    }

    public Circle(double radius) {
        this(radius,"Brown");
    }

    public Circle(String colour) {
        this(6.5,colour);
    }

    //complete paramitzed constructor
    public Circle(double radius, String colour) {
        this.radius = radius;
        this.colour = colour;
    }

    @Override
    public String toString() {
        return "Circle{" +
                "radius=" + radius +
                ", colour='" + colour + '\'' +
                '}';
    }
}

//Main class in canvas package under com.torryharris
package com.torryharris.canvas;

import com.torryharris.circlepack.Circle;

public class Main {

    public static void main(String[] args) {

        Circle c1 = new Circle(); // invoking the fully paramitarized constructor.
        System.out.println(c1);

        Circle c2 = new Circle(4.5);
        System.out.println(c2);

        Circle c3 = new Circle("brown");
        System.out.println(c3);

        Circle c4 = new Circle(5.5,"Pink");
        System.out.println(c4);

    }
}

output:
Circle{radius=3.5, colour='Blue'}
Circle{radius=4.5, colour='Brown'}
Circle{radius=6.5, colour='brown'}
Circle{radius=5.5, colour='Pink'}

--------------------------------------------------------------------------------
//creating Class Summation
package com.torryharris1.utility;

public class Summation {

    public int add(int x,int y)
    {
        return(x+y);
    }

    public double add(int x,float y,double z)
    {
        return(x+y+z);
    }

    public String add(String str1,String str2)
    {
        return(str1+"  "+str2);
    }

}


//Main ClassO
package com.torryharris.mainpack;

import com.torryharris1.utility.Summation;

public class Main {

    public static void main(String[] args) {

        Summation sob = new Summation();

        System.out.println(sob.add(10,10));
        System.out.println(sob.add(10,15.5F,12.0));
        System.out.println(sob.add("good","afternoon"));
    }
}

output:
20
37.5
good  afternoon

Process finished with exit code 0
---------------------------------------------------------------------------------
//Tax Class
package com.torryharris1.utility;

public class Tax {

    public double calc_tax(long amt, char status)
    {
        return (amt*0.1);
    }

    public double calc_tax(long amt)
    {
        return(amt*0.25);
    }
}


//main 
package com.torryharris.mainpack;

import com.torryharris1.utility.Tax;

public class Main {

    public static void main(String[] args) {

	
	Tax tob = new Tax();
        System.out.println("Tax calculated for consultant"+tob.calc_tax(20000,'c'));
        System.out.println("Tax calculated for consultant"+tob.calc_tax(20000));

    }
}
output:
Tax calculated for consultant2000.0
Tax calculated for consultant5000.0
-----------
//Average class
package com.torryharris1.utility;

public class Average {

    // this demo for ... operator in java
    public double calc_avg(int ...numbers)
    {
        int sum=0;
        for (int n:numbers)
        {
            sum+=n;
        }
        return(sum/numbers.length);
    }

    public double calc_avg( double d, int ...numbers)
    {
        double sum=d;
        for (int n:numbers)
        {
            sum+=n;
        }
        return(sum/numbers.length+1);
    }

    public double calc_avg( int d,long l, double ...numbers)
    {
        double sum = d+l;
        for (double x:numbers)
        {
            sum+=x;
        }
        return(sum/(numbers.length+2));
    }



}

//main
package com.torryharris.mainpack;

import com.torryharris1.utility.Average;

public class Main {

    public static void main(String[] args) {

	Average avgob = new Average();
        System.out.println(avgob.calc_avg(10,15));
        System.out.println(avgob.calc_avg(10,15,20,25));
        System.out.println(avgob.calc_avg(15.5,10,20,30));
        System.out.println(avgob.calc_avg(10,1552l,15.5,20.5,20.5));


    }
} 

output:
12.0
17.0
26.166666666666668
323.7

Process finished with exit code 0
---------------------------------------------------------------------------------
// Static variable and Static Method.

//Person Class
package com.torryharris.spack;

public class Person {

    private static int count; // if count is made public we can access this without creating instances.
    private int pId;
    private String pName;

    static{         // static block used to initialize static variables.
        count=0;
    }

    public Person(int pId, String pName) {
        this.pId = pId;
        this.pName = pName;
        ++count;
    }

    @Override
    public String toString() {
        return "Person{" +
                "pId=" + pId +
                ", pName=" + pName +
                '}';
    }

    public static int getCount() {
        return count;
    }
}

//Main class
package com.torryharris.mainpack;

import com.torryharris.spack.Person;

public class Main {

    public static void main(String[] args) {

        Person p1 = new Person(100,"Kannappa");
        Person p2 = new Person(101,"akash");
        System.out.println(p1);
        System.out.println(p2);
        System.out.println("no. of objects"+Person.getCount());
	 //if the count static variable is made public then the below statement is used access directly.
        // System.out.println(Person.count);
    }
}

//output:
Person{pId=100, pName=Kannappa}
Person{pId=101, pName=akash}
no. of objects2

Process finished with exit code 0
---------------------------------------------------------------------------------